opt_in_rules: # some rules are only opt-in
  - accessibility_label_for_image
  - accessibility_trait_for_button
  - anyobject_protocol
  - direct_return
  - discouraged_none_name
  - empty_count
  - empty_string
  - file_header
  - file_name
  - file_name_no_space
  - function_default_parameter_at_end
  - legacy_multiple
  - let_var_whitespace
  - private_action
  - private_outlet
  - private_subject
  - private_swiftui_state
  - prohibited_interface_builder
  - redundant_nil_coalescing
  - redundant_self_in_closure
  - redundant_type_annotation
  - sorted_first_last
  - sorted_imports
  - superfluous_else
  - test_case_accessibility
  - toggle_bool
  - unhandled_throwing_task
  - unowned_variable_capture
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_between_cases
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - weak_delegate
  - yoda_condition

  # Find all the available rules by running:
  # swiftlint rules
#included: # paths to include during linting. `--path` is ignored if present.
#  - Source

excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - Package.swift
  - .build
  - .switpm
#  - Source/ExcludedFolder
#  - Source/ExcludedFile.swift
#  - Source/*/ExcludedFile.swift # Exclude files with a wildcard

analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self
  - unused_imports

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: error # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly

# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error

line_length:
  warning: 150
  error: 200
  ignores_urls: true
  ignores_comments: true
  ignores_interpolated_strings: true
  ignores_function_declarations: true

# or they can set both explicitly
file_length:
  warning: 800
  error: 1200

# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
function_body_length:
  warning: 100
  error: 200

type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
  allowed_symbols: ["_"] # these are allowed in type names

nesting:
  type_level:
    warning: 3
    error: 5

identifier_name:
  allowed_symbols: "_"
  min_length: 2 # only min_length
    #error: 3 # only error
  max_length: 50
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey

reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)

disabled_rules: # rule identifiers to exclude from running
 - cyclomatic_complexity
 - vertical_parameter_alignment
 - inclusive_language
 #- line_length
 # - colon
 # - comma
 # - control_statement
